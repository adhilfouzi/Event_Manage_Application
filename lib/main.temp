import 'dart:io';

import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:project_event/Database/functions/fn_profilemodel.dart';
import 'package:project_event/Database/model/Profile/profile_model.dart';
import 'package:project_event/screen/Body/Screen/main/Event/accountscreen.dart';
import 'package:project_event/screen/Body/widget/Scaffold/app_bar.dart';
import 'package:project_event/screen/Body/widget/box/textfield_blue.dart';
import 'package:project_event/screen/Body/widget/sub/ContactState.dart';
import 'package:project_event/screen/intro/loginpage.dart';
import 'package:sizer/sizer.dart';

class EditProfile extends StatefulWidget {
  final ProfileModel profileid;

  const EditProfile({super.key, required this.profileid});

  @override
  State<EditProfile> createState() => _EditProfileState();
}

class _EditProfileState extends State<EditProfile> {
  final TextEditingController addressPassController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController phoneController = TextEditingController();
  final TextEditingController nameController = TextEditingController();
  final _formKey = GlobalKey<FormState>();
  late String? imagepath;
  File? imageprofile;
  String? updatedImagepath;

  @override
  void initState() {
    super.initState();
    addressPassController.text = widget.profileid.address ?? '';
    emailController.text = widget.profileid.email;
    phoneController.text = widget.profileid.phone;
    nameController.text = widget.profileid.name;
    // updatedImagepath = widget.profileid.imagex ?? 'assets/UI/icons/profile.png';
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        appBar: const CustomAppBar(actions: [], titleText: 'Edit Profile'),
        body: SingleChildScrollView(
          padding: EdgeInsets.all(1.h),
          child: Form(
            key: _formKey,
            child: Column(
              children: [
                SizedBox(height: 2.h),
                InkWell(
                  // onTap: () => addoneditphoto(context),
                  child: CircleAvatar(
                    backgroundImage: imageprofile != null
                        ? FileImage(imageprofile!)
                        : const AssetImage('assets/UI/icons/profile.png')
                            as ImageProvider,
                    radius: 50.0,
                    backgroundColor: Colors.white,
                  ),
                ),
                SizedBox(height: 2.h),
                Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    TextFieldBlue(
                      validator: (value) {
                        if (value!.isEmpty) {
                          return 'Please enter a Name';
                        }
                        return null;
                      },
                      controller: nameController,
                      textcontent: 'Full Name',
                      keyType: TextInputType.name,
                    ),
                    SizedBox(height: 1.h),
                    ContactState(
                      pcontroller: phoneController,
                      acontroller: addressPassController,
                      econtroller: emailController,
                    ),
                    SizedBox(height: 2.h),
                    Row(
                      children: [
                        Expanded(
                          child: ElevatedButton(
                            style: firstbutton(),
                            onPressed: () {
                              Navigator.of(context).push(
                                MaterialPageRoute(
                                  builder: (context) => ProfileAccount(
                                      profileid: widget.profileid.id!),
                                ),
                              );
                            },
                            child: Text(
                              'Update',
                              style: TextStyle(
                                color: Colors.white,
                                fontSize: 14.sp,
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Future editProfilecliked(context) async {
    if (_formKey.currentState != null && _formKey.currentState!.validate()) {
      await editProfiledata(
          widget.profileid.id,
          widget.profileid.imagex,
          nameController.text.toUpperCase(),
          emailController.text.toLowerCase(),
          phoneController.text,
          addressPassController,
           widget.profileid.password);
    }
  }

  // Future<void> getimage(ImageSource source) async {
  //   try {
  //     final image = await ImagePicker().pickImage(source: source);
  //     if (image == null) {
  //       return;
  //     }
  //     setState(() {
  //       imageprofile = File(image.path);
  //       imagepath = image.path; // Remove toString() here
  //     });
  //   } catch (e) {
  //     print('Failed image picker: $e');
  //   }
  // }

  // void addoneditphoto(ctx) {
  //   showDialog(
  //     context: ctx,
  //     builder: (ctx) {
  //       return AlertDialog(
  //         content: const Text('Choose Image From.......'),
  //         actions: [
  //           IconButton(
  //             onPressed: () {
  //               getimage(ImageSource.camera);
  //               Navigator.of(context).pop();
  //             },
  //             icon: const Icon(
  //               Icons.camera_alt_rounded,
  //               color: Colors.red,
  //             ),
  //           ),
  //           IconButton(
  //             onPressed: () {
  //               getimage(ImageSource.gallery);
  //               Navigator.of(context).pop();
  //             },
  //             icon: const Icon(
  //               Icons.image,
  //               color: Colors.red,
  //             ),
  //           ),
  //         ],
  //       );
  //     },
  //   );
  // }
}
